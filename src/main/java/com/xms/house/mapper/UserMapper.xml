<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xms.house.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xms.house.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="aboutme" jdbcType="VARCHAR" property="aboutme" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="agency_id" jdbcType="INTEGER" property="agencyId" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, name, phone, email, aboutme, passwd, avatar, type, create_time, enable, agency_id
  </sql>
  
    <sql id="userField">
      id,
      name,
      phone,
      email,
      aboutme,
      passwd,
      avatar,
      type,
      create_time,
      enable,
      agency_id
   </sql>
   
  <select id="select" resultType="com.xms.house.model.User">
      select <include refid="Base_Column_List"/>
      from   user
      <where>
         <if test="id != null and id != 0">
             and id = #{id}
         </if>
         <if test="email != null and email !='' ">
             and email = #{email}  
         </if>
         <if test="passwd != null and passwd !='' ">
             and passwd = #{passwd}  
         </if>
         <if test="enable != null ">
             and enable = #{enable}  
         </if>
         <if test="type != null and type != 0 ">
             and type = #{type}  
         </if>
     </where>
     </select>
     
   <select id="selectByFilter" resultMap="BaseResultMap">
	  	select
	  	<include refid="Base_Column_List" />
	  	from user where 1=1 
	  	<!-- <if test="XXX.id != null and XXX.id !='' "> 
	  		AND ID=#{XXX.id} 
	  	</if>
	  		ORDER BY CREATE_DATE DESC  -->
	 </select>
	 
	  <select id="selectById" resultType="com.xms.house.model.User">
      select <include refid="userField"/>
      from   user
      where  id = #{id}
    </select>
    
	 <select id="selectByEmail" resultType="com.xms.house.model.User">
      select <include refid="Base_Column_List"/>
      from   user
      where  email = #{email}
    </select>
    
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xms.house.model.User">
    insert into user (id, name, phone, 
      email, aboutme, passwd, 
      avatar, type, create_time, 
      enable, agency_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{aboutme,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{enable,jdbcType=BIT}, #{agencyId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xms.house.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="aboutme != null">
        aboutme,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="agencyId != null">
        agency_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="aboutme != null">
        #{aboutme,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="agencyId != null">
        #{agencyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xms.house.model.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="aboutme != null">
        aboutme = #{aboutme,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="agencyId != null">
        agency_id = #{agencyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xms.house.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      aboutme = #{aboutme,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT},
      agency_id = #{agencyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectUsersByQuery" resultMap="BaseResultMap">
     select * from user
     <where>
        <if test="id !=null" >
           and id = #{id}
        </if>
        <if test="email != null">
          and email = #{email}
        </if>
        <if test="passwd != null">
          and passwd = #{passwd}
        </if>
        <if test="enable != null">
          and enable = #{enable}
        </if>
        <if test = "type != null and type!=0">
          and type = #{type}
        </if>
     </where>
   </select>
   
    <delete id="delete">
    delete from user
    where  email=#{email}
   </delete>
   
    <update id="update">
     update user
      <set>
         <if test="phone !=null and phone != '' ">
              phone = #{phone},
         </if>
         <if test="name !=null and name != '' ">
              name = #{name},
         </if>
         <if test="aboutme !=null and aboutme != '' ">
              aboutme = #{aboutme},
         </if>
         <if test="passwd !=null and passwd != '' ">
              passwd = #{passwd},
         </if>
         <if test="enable !=null ">
              enable = #{enable},
         </if>
      </set>
      where email = #{email}
   </update>
</mapper>